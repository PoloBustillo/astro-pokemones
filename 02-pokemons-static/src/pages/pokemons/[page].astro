---
import type { GetStaticPaths } from "astro";
import PokemonCard from "@components/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemons-list.response";
import Layout from "../../layouts/Layout.astro";
import Title from "@components/Title.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const data = (await res.json()) as PokemonListResponse;

  return paginate(data.results, {
    pageSize: 10,
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<Layout title={`Pokemon ${page.currentPage}`}>
  <main>
    <Title> Listado páginado </Title>
    <section
      class="mt-10 grid grid-cols-1 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4"
    >
      {
        page.data.map((pokemon) => (
          <PokemonCard
            backUrl={page.url.current}
            name={pokemon.name}
            url={pokemon.url}
          />
        ))
      }
    </section>
    <section class="flex mt-10 gap-2 items-center">
      <a class:list={["btn", { disabled: !page.url.prev }]} href={page.url.prev}
        >Anterior</a
      >
      <a class:list={["btn", { disabled: !page.url.next }]} href={page.url.next}
        >Siguiente</a
      >
      <div class="flex flex-1"></div>
      <span class="text-xl font-bold"
        >{`Página actual: ${page.currentPage}`}</span
      >
    </section>
  </main>
  <style>
    .btn {
      @apply bg-blue-500 p-2 text-white rounded-md;
    }
    .disabled {
      @apply bg-gray-600 text-gray-400;
    }
  </style>
</Layout>
